@page "/"

@inject HttpClient Http


@if (products == null)
{
    <div class="loading-section">
        <h2>Loading...</h2>
        <div class="short-description">Please wait ...</div>
        <div class="loader mt-5">
            <div class="loader-dot dot1"></div>
            <div class="loader-dot dot2"></div>
            <div class="loader-dot dot3"></div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="col-xs-12 col-md-12 two-columns">

            @foreach (var product in products)
            {

                @if (product.UnitsInStock > 0)
                {
                    stockOpacity = 1;
                    classProduct = "anime";
                }
                else
                {
                    stockOpacity = 0.5f;
                    classProduct = "";
                }

                <div style="opacity:@stockOpacity" class="@classProduct prod-info-main prod-wrap clearfix product-grid">

                    <div class="row">

                        <div class="col-md-5 col-sm-12 col-xs-12">

                            <div class="product-image">

                                <img src="images/@product.Image" width="100%" class="img-responsive">

                                @if (product.UnitsInStock == 0)
                                {
                                    <span class="outOfStock">Out Of Stock</span>
                                }

                                @if (product.UnitsInStock > 0)
                                {
                                    if (product.Info == "Special")
                                    {
                                        info = "tag3 special";
                                    }
                                    else
                                    {
                                        info = "tag2 hot";
                                    }
                                    <span class="@info">

                                        @product.Info

                                    </span>
                                }

                            </div>

                        </div>

                        <div class="col-md-7 col-sm-12 col-xs-12">

                            <div class="product-deatil">

                                <h5 class="name">

                                    @product.ProductName

                                </h5>

                                <p class="price-container">

                                    <span>$@product.UnitPrice</span>

                                </p>

                            </div>

                            <div class="description">

                                <p>@product.Description </p>

                            </div>

                            <div class="product-info smart-form">

                                <div class="row">

                                    <div class="col-md-12">

                                        <div class="rating">
                                            <hr />
                                            Rating:

                                            @for (int x = 1; x <= @product.Stars; x++)
                                            {
                                                <i class="fa fa-star text-danger"></i>
                                            }

                                            @for (int x = 1; x <= 5 - @product.Stars; x++)
                                            {
                                                <i class="fa fa-star text-warning"></i>
                                            }

                                        </div>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>
                </div>
            }

        </div>
    </div>
}

@functions {
    Product[] products;

    private double stockOpacity;
    private string classProduct;
    private string info;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetJsonAsync<Product[]>("sample-data/products.json");
    }

    class Product
    {
        public int ProductID { get; set; }
        public string ProductName { get; set; }
        public decimal UnitPrice { get; set; }
        public int UnitsInStock { get; set; }
        public string Image { get; set; }
        public int Stars { get; set; }
        public string Description { get; set; }
        public string Info { get; set; }
    }
}




